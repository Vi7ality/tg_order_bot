const loadGroupId = () => {
  try {
    const data = fs.readFileSync(groupFilePath, "utf8");
    return JSON.parse(data).groupId;
  } catch (err) {
    return null;
  }
};

let groupChatId = loadGroupId();

const publishOrder = async (ctx) => {
  const userId = ctx.match[1];
  const order = userOrders[userId];

  if (order && groupChatId) {
    ctx.telegram.sendMessage(
      groupChatId,
      `–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n\n` +
        `üë§ –ö–æ–≥–æ —à—É–∫–∞—î—Ç–µ: ${order.role}\n` +
        `üë• –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ª—é–¥–µ–π: ${order.peopleCount}\n` +
        `‚è≥ –ì–æ–¥–∏–Ω —Ä–æ–±–æ—Ç–∏: ${order.hours}\n` +
        `üíµ –û–ø–ª–∞—Ç–∞: ${order.payment} –≥—Ä–Ω/–≥–æ–¥\n` +
        `üìç –õ–æ–∫–∞—Ü—ñ—è: ${order.location}\n` +
        `üìû –ö–æ–Ω—Ç–∞–∫—Ç: ${order.contact}\n\n` +
        `–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É, —â–æ–± –≤—ñ–¥–≥—É–∫–Ω—É—Ç–∏—Å—å:`,
      Markup.inlineKeyboard([Markup.button.callback("–í—ñ–¥–≥—É–∫–Ω—É—Ç–∏—Å—å", `respond_${userId}`)])
    );
    ctx.editMessageText("–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –æ–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ.");
    delete userOrders[userId];
  } else {
    ctx.reply("–ì—Ä—É–ø–∞, –≤ —è–∫—É –¥–æ–¥–∞–Ω–æ –±–æ—Ç–∞, –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –∞–±–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.");
  }
};

const respondOrder = async (ctx) => {
  const customerId = ctx.match[1];
  const workerUsername = ctx.from.username;

  if (workerUsername) {
    ctx.telegram.sendMessage(
      customerId,
      `<–ù–∞ –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥–≥—É–∫–Ω—É–≤—Å—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á @${workerUsername}. –í–∏ –º–æ–∂–µ—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∞–±–æ –≤—ñ–¥—Ö–∏–ª–∏—Ç–∏ –≤—ñ–¥–≥—É–∫>.`,
      Markup.inlineKeyboard([
        Markup.button.callback("–ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏", `confirm_${workerUsername}`),
        Markup.button.callback("–í—ñ–¥—Ö–∏–ª–∏—Ç–∏", `reject_${workerUsername}`),
      ])
    );
    ctx.reply("–í–∞—à –≤—ñ–¥–≥—É–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –∑–∞–º–æ–≤–Ω–∏–∫—É.");
  } else {
    ctx.reply("–í–∏ –ø–æ–≤–∏–Ω–Ω—ñ –º–∞—Ç–∏ —ñ–º º—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É Telegram, —â–æ–± –≤—ñ–¥–≥—É–∫–Ω—É—Ç–∏—Å—å.");
  }
};

const confirmOrder = async (ctx) => {
  const workerUsername = ctx.match[1];
  ctx.editMessageText(`–í—ñ–¥–≥—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ @${workerUsername} –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ. –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑–∞–∫—Ä–∏—Ç–æ.`);
};

const rejectOrder = async (ctx) => {
  const workerUsername = ctx.match[1];
  ctx.editMessageText(`–í—ñ–¥–≥—É–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ @${workerUsername} –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ.`);
};

module.exports = { publishOrder, respondOrder, confirmOrder, rejectOrder };
